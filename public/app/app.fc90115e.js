"use strict";function AccountComponent(){var a=this;a.select=function(b){var c={$event:{account:a.account}};"edit"===b?a.onEdit(c):a.onDelete(c)}}function AccountsComponent(a,b,c,d,e){function f(a,c){b.go("admin.list",{size:a,index:c})}var g=this;if(g.accounts=[],g.working=!1,!g.accountsResource._embedded.users)return a.debug("Account resource not found in server response."),void e.error({title:"Server Error",message:"Error found while talking to server. Details logged to the console."});Array.isArray(g.accountsResource._embedded.users)?g.accounts=g.accountsResource._embedded.users:g.accounts.push(g.accountsResource._embedded.users),g.index=c.index,g.size=c.size,g.totalItems=g.accountsResource.page.totalItems,g.pageChanged=function(){f(c.size,g.index)},g.onDelete=function(b){g.working=!0;var c=g.accounts.indexOf(b.account);new d(b.account).$delete().then(function(){a.debug("Successfully deleted the account."),e.success({title:"Success",message:"The account was correctly deleted."})}).catch(function(b){a.debug(b),e.error({title:"Application error",message:"Error found while deleting the account. Details logged to the console."})}).finally(function(){g.working=!1,0<=c&&g.accounts.splice(c,1)})},g.onEdit=function(a){b.go("admin.edit",{id:a.account.id,account:a.account})}}function AdminResourceBuilder(a){return function(b){var c="/api/admin/:collection/:id";return b(c,{id:"@id",collection:a},{query:{isArray:!1},update:{url:c,method:"PUT"},search:{url:"/api/admin/:collection/search/:search",method:"GET"}})}}function AccountEditComponent(a,b,c,d,e,f){var g=this;if(g.editing=!!c.id,g.working=!1,g.roles=[],!g.rolesResource._embedded.roles)return a.debug("Role resource not found in server response."),void f.error({title:"Server Error",message:"Error found while talking to server. Details logged to the console."});Array.isArray(g.rolesResource._embedded.roles)?g.roles=g.rolesResource._embedded.roles:g.roles.push(g.rolesResource._embedded.roles),g.role=g.roles[0],g.editing?(g.accountResource._embedded?g.account=g.accountResource._embedded.users:g.account=angular.copy(g.accountResource),g.currentAction="Edit"):(g.account=new e,g.currentAction="Create"),g.save=function(){g.working=!0,g.editing?(delete g.account._links,new e(g.account).$update().then(function(){a.debug("Account updated."),f.success({title:"Success",message:"The account was updated."}),b.go("admin.list")}).catch(function(b){a.debug(b),f.error({title:"Server Error",message:"Error found while talking to server. Details logged to the console."})}).finally(function(){g.working=!1})):g.account.$save().then(function(){a.debug("Account created."),f.success({title:"Success",message:"The account was created."}),b.go("admin.list")}).catch(function(b){a.debug(b),f.error({title:"Server Error",message:"Error found while talking to server. Details logged to the console."})}).finally(function(){g.working=!1})}}AccountsComponent.$inject=["$log","$state","$stateParams","Account","Notification"],AccountEditComponent.$inject=["$log","$state","$stateParams","$window","Account","Notification"],angular.module("asrApp",["components.admin.management","ngCookies","ngResource","ngSanitize","ui.router","ui.bootstrap","angular-momentjs","hrCore","hrHal","sprintf","chart.js"]).config(["$urlRouterProvider","$locationProvider",function(a,b){a.otherwise("/"),b.hashPrefix("!")}]).config(["$httpProvider",function(a){a.interceptors.push("authInterceptor")}]).config(["$momentProvider",function(a){a.asyncLoading(!1)}]).config(["uibDatepickerConfig",function(a){a.showWeeks=!1}]).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(a,b,c,d){return{responseError:function(a){return 401===a.status?(d.path("/login"),c.remove("mojolicious"),b.reject(a)):b.reject(a)}}}]).run(["$rootScope","$location","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){c.isLoggedInAsync(function(a){d.authenticate&&!a&&b.path("/login")})})}]),angular.module("components.admin.management",["ui.router","ui-notification","ui.bootstrap","ngMessages","ngResource"]);var account={bindings:{account:"<",onEdit:"&",onDelete:"&"},templateUrl:"app/account/account/account.html",controller:"AccountComponent"};angular.module("components.admin.management").component("account",account),angular.module("components.admin.management").controller("AccountComponent",AccountComponent);var accounts={bindings:{accountsResource:"<"},templateUrl:"app/account/accounts.html",controller:"AccountsComponent"};angular.module("components.admin.management").component("accounts",accounts).config(["$stateProvider",function(a){a.state("admin",{abstract:"true",url:"/admin",template:"<div data-ng-include=\"'components/navbar/navbar.html'\"></div><div ui-view></div>"}).state("admin.list",{authenticate:!0,url:"/accounts?size&index",component:"accounts",params:{index:"1",size:"10"},resolve:{accountsResource:["$stateParams","Account",function(a,b){return b.query().$promise}]}})}]),angular.module("components.admin.management").controller("AccountsComponent",AccountsComponent),angular.module("components.admin.management").factory("Account",AdminResourceBuilder("users")).factory("Role",AdminResourceBuilder("roles"));var edit={bindings:{rolesResource:"<",accountResource:"<"},templateUrl:"app/account/edit/edit.html",controller:"AccountEditComponent"};angular.module("components.admin.management").component("edit",edit).config(["$stateProvider",function(a){a.state("admin.edit",{authenticate:!0,url:"/accounts/:id/edit",component:"edit",params:{account:null,id:null},resolve:{accountResource:["$stateParams","Account",function(a,b){return a.account?a.account:b.get({id:a.id}).$promise}],rolesResource:["Role",function(a){return a.query().$promise}]}}).state("admin.create",{authenticate:!0,url:"/accounts/new",component:"edit",params:{accountResource:null},resolve:{rolesResource:["Role",function(a){return a.query().$promise}]}})}]),angular.module("components.admin.management").controller("AccountEditComponent",AccountEditComponent),angular.module("asrApp").controller("MainCtrl",["$scope","$http",function(a,b){}]),angular.module("asrApp").config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl"})}]),angular.module("asrApp").controller("LoginCtrl",["$scope","Auth","$location",function(a,b,c){a.user={},a.errors={},a.login=function(d){a.submitted=!0,d.$valid&&b.login({username:a.user.username,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){a.errors.other=b.message})}}]),angular.module("asrApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/myaccount/login/login.html",controller:"LoginCtrl"}).state("settings",{url:"/settings",templateUrl:"app/myaccount/settings/settings.html",controller:"SettingsCtrl as settingsVM",authenticate:!0})}]),angular.module("asrApp").controller("SettingsCtrl",["User","Auth",function(a,b){var c=this;c.errors={},c.changePassword=function(a){c.submitted=!0,a.$valid&&b.changePassword(c.user.oldPassword,c.user.newPassword).then(function(){c.message="Password successfully changed."}).catch(function(){a.password.$setValidity("mongoose",!1),c.errors.other="Incorrect password",c.message=""})}}]),angular.module("asrApp").controller("SignupCtrl",["$scope","Auth","$location",function(a,b,c){a.user={},a.errors={},a.register=function(d){a.submitted=!0,d.$valid&&b.createUser({name:a.user.name,email:a.user.email,password:a.user.password}).then(function(){c.path("/")}).catch(function(b){b=b.data,a.errors={},angular.forEach(b.errors,function(b,c){d[c].$setValidity("mongoose",!1),a.errors[c]=b.message})})}}]),angular.module("asrApp").controller("SitesCtrl",["$state","$stateParams","$q","sitesResource","Format","chartResourceBytes","chartResourceTime","RestService","ExportPDF",function(a,b,c,d,e,f,g,h,i){var j=this;j.startDate=b.start,j.endDate=b.end,j.tag=b.tag,j.sort=b.sort,j.index=b.index,j.size=b.size,j.viewTitle=b.user?["Sites of User",b.user].join(" "):"Sites",j.chartBytesTitle="Top 3 Sites by Bytes",j.chartTimeTitle="Top 3 Sites by Time",j.columns={site:{label:"Site",format:e.none,order:0,remoteColumn:"site",sortDir:null},bytes:{label:"Bytes",format:e.formatBytes,order:1,remoteColumn:"bytes",sortDir:null},bytes_percent:{label:"Bytes %",format:e.formatPercent,order:2,remoteColumn:"bytes_percent",sortDir:null},time:{label:"Time",format:e.formatDurationInSeconds,order:3,remoteColumn:"time",sortDir:null},time_percent:{label:"Time %",format:e.formatPercent,order:4,remoteColumn:"time_percent",sortDir:null}},j.columnNames=Object.keys(j.columns).sort(function(a,b){return j.columns[a].order-j.columns[b].order}),j.sortColumn=function(b,c){var d,e={};switch(j.columns[c].sortDir){case"asc":d=null;break;case"desc":d="asc";break;default:d="desc"}e.sort=d?[j.columns[c].remoteColumn,d].join("."):d,a.go("sites",e)},j.newIndex=function(){a.go("sites",{index:j.index})};j.makePDF=function(){h.fetchAllPages(d,b,1e3).then(function(a){var b=[];return a.forEach(function(a){var c=a.$subs("sites").$promise.then(function(a){return a});b.push(c)}),c.all(b)}).then(function(a){var c=[],d={},e=b.user?["sites_of_user",b.user].join("_"):"sites";d.pdfName=[e,j.startDate,j.endDate].join("_"),d.chartBytesTitle=j.chartBytesTitle,d.chartTimeTitle=j.chartTimeTitle,d.relation="site",d.header=["Report for",j.viewTitle,"from",j.startDate,"to",j.endDate].join(" "),Object.keys(j.columns).forEach(function(a){c.push(j.columns[a].label)});var f=document.getElementById("chartBytes").toDataURL(),g=document.getElementById("chartTime").toDataURL();i.createPDF(d,c,a,j.labelsBytes,j.labelsTime,f,g)})},d.$has("sites")&&(j.sites=d.$subs("sites"),j.totalItems=d.page.totalItems,j.sort&&function(){Object.keys(j.columns).forEach(function(a){var b=j.sort.split(".");b[0]===j.columns[a].remoteColumn&&(j.columns[a].sortDir=b[1])})}()),f.$has("sites")&&(j.chartBytes=f.$subs("sites"),function(){j.labelsBytes=[],j.dataBytes=[],j.chartBytes.forEach(function(a){j.labelsBytes.push(a.site),j.dataBytes.push(a.bytes)}),j.bytesChartOptions={tooltipTemplate:function(a){return a.label+": "+e.formatBytes(a.value)}}}()),g.$has("sites")&&(j.chartTime=g.$subs("sites"),function(){j.labelsTime=[],j.dataTime=[],j.chartTime.forEach(function(a){j.labelsTime.push(a.site),j.dataTime.push(a.time)}),j.timeChartOptions={tooltipTemplate:function(a){return a.label+": "+e.formatDurationInSeconds(a.value)}}}())}]),angular.module("asrApp").config(["$stateProvider",function(a){a.state("sites",{url:"/sites?size&index&start&end&sort&user&tag",templateUrl:"app/sites/sites.html",controller:"SitesCtrl as ctrl",params:{size:"10",index:"1",sort:"bytes.desc",tag:"0"},resolve:{sitesResource:["$stateParams","RestService",function(a,b){return a.user?b.search("sites",{index:a.index,size:a.size,user:a.user,sort:a.sort,start:a.start,end:a.end,tag:a.tag},"findByUser"):b.fetch("sites",{index:a.index,size:a.size,sort:a.sort,start:a.start,end:a.end,tag:a.tag})}],chartResourceBytes:["$stateParams","RestService",function(a,b){return a.user?b.search("sites",{user:a.user,size:3,sort:"bytes.desc",start:a.start,end:a.end,tag:a.tag},"findByUser"):b.fetch("sites",{size:3,sort:"bytes.desc",start:a.start,end:a.end,tag:a.tag})}],chartResourceTime:["$stateParams","RestService",function(a,b){return a.user?b.search("sites",{user:a.user,size:3,sort:"time.desc",start:a.start,end:a.end,tag:a.tag},"findByUser"):b.fetch("sites",{size:3,sort:"time.desc",start:a.start,end:a.end,tag:a.tag})}]}})}]),angular.module("asrApp").controller("UsersCtrl",["$state","$stateParams","$q","usersResource","Format","chartResourceBytes","chartResourceTime","RestService","ExportPDF",function(a,b,c,d,e,f,g,h,i){var j=this;j.startDate=b.start,j.endDate=b.end,j.tag=b.tag,j.sort=b.sort,j.index=b.index,j.size=b.size,j.viewTitle=b.site?["Users of Site",b.site].join(" "):"Users",j.chartBytesTitle="Top 3 Users by Bytes",j.chartTimeTitle="Top 3 Users by Time",j.columns={remote_user:{label:"User",format:e.none,order:0,remoteColumn:"remote_user",sortDir:null},bytes:{label:"Bytes",format:e.formatBytes,order:1,remoteColumn:"bytes",sortDir:null},bytes_percent:{label:"Bytes %",format:e.formatPercent,order:2,remoteColumn:"bytes_percent",sortDir:null},time:{label:"Time",format:e.formatDurationInSeconds,order:3,remoteColumn:"time",sortDir:null},time_percent:{label:"Time %",format:e.formatPercent,order:4,remoteColumn:"time_percent",sortDir:null}},j.columnNames=Object.keys(j.columns).sort(function(a,b){return j.columns[a].order-j.columns[b].order}),j.sortColumn=function(b,c){var d,e={};switch(j.columns[c].sortDir){case"asc":d=null;break;case"desc":d="asc";break;default:d="desc"}e.sort=d?[j.columns[c].remoteColumn,d].join("."):d,a.go("users",e)},j.newIndex=function(){a.go("users",{index:j.index})};j.makePDF=function(){h.fetchAllPages(d,b,1e3).then(function(a){var b=[];return a.forEach(function(a){var c=a.$subs("users").$promise.then(function(a){return a});b.push(c)}),c.all(b)}).then(function(a){var c=[],d={},e=b.site?["users_of_site",b.site].join("_"):"users";d.pdfName=[e,j.startDate,j.endDate].join("_"),d.chartBytesTitle=j.chartBytesTitle,d.chartTimeTitle=j.chartTimeTitle,d.relation="remote_user",d.header=["Report for",j.viewTitle,"from",j.startDate,"to",j.endDate].join(" "),Object.keys(j.columns).forEach(function(a){c.push(j.columns[a].label)});var f=document.getElementById("chartBytes").toDataURL(),g=document.getElementById("chartTime").toDataURL();i.createPDF(d,c,a,j.labelsBytes,j.labelsTime,f,g)})},d.$has("users")&&(j.users=d.$subs("users"),j.totalItems=d.page.totalItems,j.sort&&function(){Object.keys(j.columns).forEach(function(a){var b=j.sort.split(".");b[0]===j.columns[a].remoteColumn&&(j.columns[a].sortDir=b[1])})}()),f.$has("users")&&(j.chartBytes=f.$subs("users"),function(){j.labelsBytes=[],j.dataBytes=[],j.chartBytes.forEach(function(a){j.labelsBytes.push(a.remote_user),j.dataBytes.push(a.bytes)}),j.bytesChartOptions={tooltipTemplate:function(a){return a.label+": "+e.formatBytes(a.value)}}}()),g.$has("users")&&(j.chartTime=g.$subs("users"),function(){j.labelsTime=[],j.dataTime=[],j.chartTime.forEach(function(a){j.labelsTime.push(a.remote_user),j.dataTime.push(a.time)}),j.timeChartOptions={tooltipTemplate:function(a){return a.label+": "+e.formatDurationInSeconds(a.value)}}}())}]),angular.module("asrApp").config(["$stateProvider",function(a){a.state("users",{url:"/users?size&index&start&end&sort&site&tag",templateUrl:"app/users/users.html",controller:"UsersCtrl as ctrl",params:{size:"10",index:"1",sort:"bytes.desc",tag:"0"},resolve:{usersResource:["$stateParams","RestService",function(a,b){return a.site?b.search("users",{index:a.index,size:a.size,site:a.site,sort:a.sort,start:a.start,end:a.end,tag:a.tag},"findBySite"):b.fetch("users",{index:a.index,size:a.size,sort:a.sort,start:a.start,end:a.end,tag:a.tag})}],chartResourceBytes:["$stateParams","RestService",function(a,b){return a.site?b.search("users",{site:a.site,size:3,sort:"bytes.desc",start:a.start,end:a.end,tag:a.tag},"findBySite"):b.fetch("users",{size:3,sort:"bytes.desc",start:a.start,end:a.end,tag:a.tag})}],chartResourceTime:["$stateParams","RestService",function(a,b){return a.site?b.search("users",{site:a.site,size:3,sort:"time.desc",start:a.start,end:a.end,tag:a.tag},"findBySite"):b.fetch("users",{size:3,sort:"time.desc",start:a.start,end:a.end,tag:a.tag})}]}})}]),angular.module("asrApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(a,b,c,d,e,f){var g={};return{login:function(a,b){var e=b||angular.noop,h=f.defer();return c.post("/auth/login",{username:a.username,password:a.password}).success(function(a){return g=d.get(),h.resolve(a),e(a)}).error(function(a){return this.logout(),h.reject(a),e(a)}.bind(this)),h.promise},logout:function(){c.get("/auth/logout"),e.remove("mojolicious"),g={}},createUser:function(a,b){var c=b||angular.noop;return d.save(a,function(b){return e.put("token",b.token),g=d.get(),c(a)},function(a){return this.logout(),c(a)}.bind(this)).$promise},changePassword:function(a,b,c){var e=c||angular.noop;return d.changePassword({oldPassword:a,newPassword:b},function(a){return e(a)},function(a){return e(a)}).$promise},getCurrentUser:function(){return g},isLoggedIn:function(){return g.hasOwnProperty("roles")},isLoggedInAsync:function(a){g.hasOwnProperty("$promise")?g.$promise.then(function(){a(!0)}).catch(function(){a(!1)}):a(g.hasOwnProperty("roles")?!0:!1)},isAdmin:function(){return!!Array.isArray(g.roles)&&g.roles.some(function(a){return"admin"===a})}}}]),angular.module("asrApp").factory("User",["$resource",function(a){return a("/auth/:controller",{},{changePassword:{method:"POST",params:{controller:"passwd"}},get:{method:"GET",params:{controller:"me"}}})}]),angular.module("asrApp").component("datePickers",{templateUrl:"components/datePickers/datePickers.html",controller:"datePickersCtrl"}),angular.module("asrApp").controller("datePickersCtrl",["$state","$stateParams","RestService","$moment",function(a,b,c,d){var e=this;c.fetch("tags",{size:"25",index:"1"}).then(function(a){e.tags=a.$subs("tags"),void 0!==b.tag?e.tag=e.tags.filter(function(a){return a.id==b.tag})[0]:e.tag=e.tags[0]}),e.endDate=b.end?d(b.end).toDate():d().toDate(),e.startDate=b.start?d(b.start).toDate():d().subtract(15,"days").toDate(),e.maxDate=new Date,e.tooglePicker=function(a){e[a]=!e[a]},e.getDateParams=function(){var a={};return a.start=e.startDate.toISOString().split("T")[0],a.end=e.endDate.toISOString().split("T")[0],a},e.applyDate=function(){a.go(a.current,e.getDateParams())},e.applyTag=function(){a.go(a.current,{tag:e.tag.id})}}]),angular.module("asrApp").factory("ExportPDF",["Format",function(a){var b=[[151,187,205],[220,220,220],[247,70,74],[70,191,189],[253,180,92],[148,159,177],[77,83,96]];return{createPDF:function(c,d,e,f,g,h,i){var j=new jsPDF("p","pt","letter"),k=[],l=function(a,c){for(var d=0;d<a.length;d++){var e=b[d];j.setFillColor(e[0],e[1],e[2]),j.roundedRect(c,190+25*d,15,15,3,3,"FD"),j.text(c+20,201+25*d,a[d])}};j.setFontSize(12),j.text(100,120,c.chartBytesTitle),j.text(370,120,c.chartTimeTitle),j.setFontSize(8),j.setDrawColor(255,255,255),j.addImage(h,"PNG",-40,150,300,150),l(f,195),j.addImage(i,"PNG",230,150,300,150),l(g,465),e.forEach(function(b){Array.isArray(b)?b.forEach(function(b){k.push([b[c.relation],a.formatBytes(b.bytes),a.formatPercent(b.bytes_percent),a.formatDurationInSeconds(b.seconds),a.formatPercent(b.time_percent)])}):k.push([b[c.relation],a.formatBytes(b.bytes),a.formatPercent(b.bytes_percent),a.formatDurationInSeconds(b.seconds),a.formatPercent(b.time_percent)])});var m=function(a,b,d){a.setFontSize(14),a.text(c.header,d.margins.horizontal,60),a.setFontSize(d.fontSize)},n=function(a,b,c,d){var e="Page "+c;a.text("ASR application",d.margins.horizontal,a.internal.pageSize.height-30),a.text(e,a.internal.pageSize.width-75,a.internal.pageSize.height-30)},o={renderHeader:m,renderFooter:n,margins:{horizontal:40,top:80,bottom:50},startY:360};j.autoTable(d,k,o),j.save([c.pdfName,"pdf"].join("."))}}}]),angular.module("asrApp").factory("Format",["$moment",function(a){var b=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"];return{formatBytes:function(a,c){var d=c||1024,e=parseInt(a);if(0===e)return"0 "+b[0];var f=Math.floor(Math.log(e)/Math.log(d));return(e/Math.pow(d,f)).toFixed(1)+" "+b[f]},formatPercent:function(a,b){return parseFloat(a).toFixed(b||2)+"%"},formatDurationInSeconds:function(b){var c=parseInt(b);return a.duration(c/1e3,"seconds").humanize()},floor:function(a){return Math.floor(a)},none:function(a){return a}}}]),angular.module("asrApp").factory("Modal",["$rootScope","$modal",function(a,b){function c(c,d){var e=a.$new();return c=c||{},d=d||"modal-default",angular.extend(e,c),b.open({templateUrl:"components/modal/modal.html",windowClass:d,scope:e})}return{confirm:{delete:function(a){return a=a||angular.noop,function(){var b,d=Array.prototype.slice.call(arguments),e=d.shift();b=c({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+e+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(a){b.close(a)}},{classes:"btn-default",text:"Cancel",click:function(a){b.dismiss(a)}}]}},"modal-danger"),b.result.then(function(b){a.apply(b,d)})}}}}}]),angular.module("asrApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}}),angular.module("asrApp").controller("NavbarCtrl",["$scope","$location","Auth","$stateParams","$moment","RestService",function(a,b,c,d,e,f){a.menu=[{title:"Users",link:"users"},{title:"Sites",link:"sites"}],a.adminMenu=[{title:"Accounts",parent:"admin",target:"admin.list"}],a.endDate=d.end,a.startDate=d.start,a.tag=d.tag,a.isCollapsed=!0,a.isLoggedIn=c.isLoggedIn,a.isAdmin=c.isAdmin,a.getCurrentUser=c.getCurrentUser,a.logout=function(){c.logout(),b.path("/login")},a.isActive=function(a){return a===b.path()}}]),angular.module("asrApp").service("RestService",["$q","hrRoot",function(a,b){return{fetch:function(a,c,d){return b(d?"/api"+d:"/api").follow().$promise.then(function(b){if(b.$has(a))return b.$followOne(a,{data:c}).$promise;throw Error("Requested relation not found in the root resource.")})},fetchPages:function(b,c){for(var d=b.page,e=Math.ceil(d.totalItems/d.size),f=[],g=1;g<=e;g++){c.index=g;var h=b.$followOne("self",{data:c}).$promise.then(function(a){return a});f.push(h)}return a.all(f)},fetchAllPages:function(b,c,d){var e=Math.ceil(b.page.totalItems/d),f=[];c.size=d;for(var g=1;g<=e;g++){c.index=g;var h=b.$followOne("self",{data:c}).$promise.then(function(a){return a});f.push(h)}return a.all(f)},search:function(a,c,d){return b("/api").follow().$promise.then(function(b){if(b.$has(a))return b.$followOne(a,{data:c}).$promise;throw Error("Requested relation not found in API root resource.")}).then(function(a){if(a.$has("search"))return a.$followOne("search").$promise;throw Error("Requested relation has no search resources.")}).then(function(a){if(a.$has(d))return a.$followOne(d,{data:c}).$promise;throw Error("Requested relation %s has no search %s")})},create:function(a,c){return b("/api/admin").follow().$promise.then(function(b){if(b.$has(a))return b.$followOne(a,{protocol:{method:"POST",data:c}}).$promise;throw Error("Requested relation not found in the root resource.")})},update:function(a,b){return a.$followOne("self",{protocol:{method:"PUT",data:b}}).$promise}}}]),angular.module("asrApp").run(["$templateCache",function(a){a.put("app/account/account/account.html",'<strong>{{"%(name)s &lt;%(login)s&gt;" | fmt:$ctrl.account }}</strong><div class="btn-group pull-right" role=group><button class="btn btn-danger" type=button data-ng-disabled="account.login === \'admin\'" data-ng-click=$ctrl.select() aria-label=remove><span class=fa aria-hidden=true data-ng-class="{\n                  \'fa-trash\': !$ctrl.working,\n                  \'fa-spinner fa-spin\': $ctrl.working\n            }"></span></button> <button class="btn btn-primary" type=button data-ng-click="$ctrl.select(\'edit\')" aria-label=edit><span class="fa fa-pencil" aria-hidden=true></span></button></div><br><span>{{$ctrl.account.login}}</span>'),a.put("app/account/accounts.html",'<section class=container><div class=center-70><section><div class=row><span class="h1 col-sm-6">Account List</span> <span class="h1 col-sm-2 col-sm-offset-4"><button class="btn btn-lg btn-primary" ui-sref=admin.create>Create <span class="fa fa-plus-circle"></span></button></span></div><br><div class=row><ul class=list-group><li class="list-group-item identified-list-item" data-ng-repeat="account in $ctrl.accounts"><account account=account on-edit=$ctrl.onEdit($event); on-delete=$ctrl.onDelete($event);></account></li></ul></div><pager total-items=$ctrl.totalItems items-per-page=$ctrl.pageSize data-ng-model=$ctrl.pageNumber data-ng-change=$ctrl.pageChanged()></pager></section></div></section>'),a.put("app/account/edit/edit.html",'<section class=container><div class=center-70><div class=row><span class="h1 col-sm-8">Account {{$ctrl.currentAction}}</span> <span class="h1 col-sm-2 col-sm-offset-2"><button class="btn btn-lg btn-primary" type=button ng-disabled="$ctrl.accountForm.$invalid || $ctrl.accountForm.$pending || $ctrl.working" ng-click=$ctrl.save() aria-label=Save><span class=fa aria-hidden=true ng-class="{\n                    \'fa-save\': !$ctrl.working,\n                    \'fa-spinner fa-spin\': $ctrl.working\n                }"></span> Save</button></span></div><div class=row><form name=$ctrl.accountForm ng-submit="$ctrl.accountForm.$valid && $ctrl.save()"><fieldset><legend><span class=fieldset-header>Account</span></legend><section><div class=row><div class="form-group has-feedback col-sm-6" ng-class="{\n                            \'has-error\': $ctrl.accountForm.login.$touched && $ctrl.accountForm.login.$invalid,\n                            \'has-success\': $ctrl.accountForm.login.$touched && $ctrl.accountForm.login.$valid}"><label class=control-label for=login>Login</label><input class=form-control name=login id=login required ng-model=$ctrl.account.login ng-model-options="{updateOn: \'blur\'}"> <span class="form-control-feedback fa" ng-class="{\n                              \'fa-spinner fa-spin\': $ctrl.accountForm.login.$pending.validateLogin,\n                              \'fa-times\': $ctrl.accountForm.login.$touched && $ctrl.accountForm.login.$invalid,\n                              \'fa-check\': $ctrl.accountForm.login.$touched && $ctrl.accountForm.login.$valid}"></span><div class=help-block ng-messages=$ctrl.accountForm.login.$error><div ng-messages-include=app/account/edit/validation-messages.html></div></div></div><div class="form-group has-feedback col-sm-6" ng-class="{\n                            \'has-error\': $ctrl.accountForm.name.$touched && $ctrl.accountForm.name.$invalid,\n                            \'has-success\': $ctrl.accountForm.name.$touched && $ctrl.accountForm.name.$valid}"><label class=control-label for=name>Name</label><input class=form-control name=name id=name required ng-model-options="{updateOn: \'blur\'}" ng-model=$ctrl.account.name> <span class="form-control-feedback fa" ng-class="{\n                                \'fa-times\': $ctrl.accountForm.name.$touched && $ctrl.accountForm.name.$invalid,\n                                \'fa-check\': $ctrl.accountForm.name.$touched && $ctrl.accountForm.name.$valid}"></span><div class=help-block ng-messages=$ctrl.accountForm.name.$error><div ng-messages-include=app/account/edit/validation-messages.html></div></div></div></div><div class=row><div class="form-group has-feedback col-sm-6" ng-class="{\n                          \'has-error\': $ctrl.accountForm.password.$touched && $ctrl.accountForm.password.$invalid,\n                          \'has-success\': $ctrl.accountForm.password.$touched && $ctrl.accountForm.password.$valid}"><label class=control-label for=password>Password</label><input class=form-control name=password id=password type=password ng-required=!$ctrl.editing ng-minlength=8 ng-model=$ctrl.account.password ng-model-options="{updateOn: \'blur\'}"> <span class="form-control-feedback fa" ng-class="{\n                                \'fa-times\': $ctrl.accountForm.password.$touched && $ctrl.accountForm.password.$invalid,\n                                \'fa-check\': $ctrl.accountForm.password.$touched && $ctrl.accountForm.password.$valid}"></span><div class=help-block ng-messages=$ctrl.accountForm.password.$error><div ng-messages-include=app/account/edit/validation-messages.html></div></div></div><div class="form-group has-feedback col-sm-6 select-container" ng-class="{\n                            \'has-error\': $ctrl.accountForm.roles.$touched && $ctrl.accountForm.roles.$invalid,\n                            \'has-success\': $ctrl.accountForm.roles.$touched && $ctrl.accountForm.roles.$valid}"><label class=control-label for=roles>Roles</label><select class=form-control name=roles id=roles required data-ng-model=$ctrl.role data-ng-options="role as role.name for role in $ctrl.roles track by role.id" tooltip-placement=top uib-tooltip={{$ctrl.role.description}} tooltip-trigger></select><span class="form-control-feedback fa" ng-class="{\n                                \'fa-times\': $ctrl.accountForm.roles.$touched && $ctrl.accountForm.roles.$invalid,\n                                \'fa-check\': $ctrl.accountForm.roles.$touched && $ctrl.accountForm.roles.$valid}"></span><div class=help-block ng-messages=$ctrl.accountForm.status.$error><div ng-messages-include=app/account/edit/validation-messages.html></div></div></div></div></section></fieldset></form></div></div></section>'),a.put("app/account/edit/validation-messages.html","<div ng-message=required>Value is required.</div><div ng-message=minlength>Value is too short.</div><div ng-message=maxlength>Value is too long.</div>"),a.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><header class=hero-unit id=banner><div class=container>\x3c!--<h1>ASR</h1>--\x3e\x3c!--<p class="lead">Albatros Surfing Reports</p>--\x3e<h1 class=lead>Surfing Reports</h1><img src=assets/images/logo.0463a3bf.png alt="Albatros Technology" width=225></div></header><footer class=footer><div class=container><p>&copy;Albatros Technology</p></div></footer>'),a.put("app/myaccount/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Login</h1></div><div class=col-sm-12><form class=form name=form ng-submit=login(form) novalidate><div class=form-group><label>Email</label><input type=input name=username class=form-control ng-model=user.username required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=user.password required></div><div class="form-group has-error"><p class=help-block ng-show="(form.username.$error.required || form.password.$error.required) && submitted">Please enter your username and password.</p><p class=help-block ng-show="form.username.$error.username && submitted">Please enter a valid username.</p><p class=help-block>{{ errors.other }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Login</button></div></form></div></div><hr></div>'),a.put("app/myaccount/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=settingsVM.changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=settingsVM.user.oldPassword mongoose-error><p class=help-block ng-show=settingsVM.form.password.$error.mongoose>{{ settingsVM.errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=settingsVM.user.newPassword ng-minlength=3 required><p class=help-block ng-show="(settingsVM.form.newPassword.$error.minlength || settingsVM.form.newPassword.$error.required) && (settingsVM.form.newPassword.$dirty || settingsVM.submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ settingsVM.message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),
a.put("app/myaccount/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && submitted,\n                                            \'has-error\': form.name.$invalid && submitted }"><label>Name</label><input name=name class=form-control ng-model=user.name required><p class=help-block ng-show="form.name.$error.required && submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && submitted,\n                                            \'has-error\': form.email.$invalid && submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && submitted,\n                                            \'has-error\': form.password.$invalid && submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Sign up</button> <a class="btn btn-default btn-lg btn-register" href=/login>Login</a></div></form></div></div><hr></div>'),a.put("app/sites/sites.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><section class=container><div class=row><div class=col-md-7><h2>{{ctrl.viewTitle}} <span class=pull-right><button type=button class="btn btn-primary" data-ng-click=ctrl.makePDF()>Export PDF</button></span></h2></div></div><div class=row><div class=col-md-8><date-pickers></date-pickers></div></div><div class=row><div class=col-md-7><table class="table table-striped table-bordered table-hover"><thead><tr><th class=clickable data-ng-repeat="column in ctrl.columnNames" data-ng-click="ctrl.sortColumn($event, column)"><span class="clickable text">{{ctrl.columns[column].label}}</span> <span class="fa fa-sort" data-ng-show="ctrl.columns[column].sortDir === null"></span> <span class="fa fa-sort-asc" data-ng-show="ctrl.columns[column].sortDir === \'asc\'"></span> <span class="fa fa-sort-desc" data-ng-show="ctrl.columns[column].sortDir === \'desc\'"></span></th></tr></thead><tbody><tr data-ng-repeat="site in ctrl.sites"><td data-ng-repeat="column in ctrl.columnNames"><span data-ng-if="column === \'site\'"><a data-ui-sref="users({site: site[column], start: ctrl.startDate, end: ctrl.endDate, tag: ctrl.tag})" tooltip-placement=top uib-tooltip="View site detail" tooltip-trigger><span class="fa fa-info-circle"></span> </a></span><span>{{ctrl.columns[column].format(site[column])}}</span></td></tr></tbody></table><div style="text-align: center"><ul uib-pagination total-items=ctrl.totalItems ng-model=ctrl.index max-size=10 items-per-page=ctrl.size class=pagination-sm rotate=false num-pages=numPages ng-change=ctrl.newIndex()></ul></div></div><div class=col-md-5><div class="panel panel-default"><div class=panel-heading><span><b>{{ctrl.chartBytesTitle}}</b></span></div><div class=panel-body><canvas id=chartBytes class="chart chart-pie" chart-data=ctrl.dataBytes chart-labels=ctrl.labelsBytes chart-legend=true chart-options=ctrl.bytesChartOptions></canvas></div></div><div class="panel panel-default"><div class=panel-heading><span><b>{{ctrl.chartTimeTitle}}</b></span></div><div class=panel-body><canvas id=chartTime class="chart chart-pie" chart-data=ctrl.dataTime chart-labels=ctrl.labelsTime chart-legend=true chart-options=ctrl.timeChartOptions></canvas></div></div></div></div></section>'),a.put("app/users/users.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><section class=container><div class=row><div class=col-md-7><h2>{{ctrl.viewTitle}} <span class=pull-right><button type=button class="btn btn-primary" data-ng-click=ctrl.makePDF()>Export PDF</button></span></h2></div></div><div class=row><div class=col-md-8><date-pickers></date-pickers></div></div><div class=row><div class=col-md-7><table class="table table-striped table-bordered table-hover"><thead><tr><th class=clickable data-ng-repeat="column in ctrl.columnNames" data-ng-click="ctrl.sortColumn($event, column)"><span class="clickable text">{{ctrl.columns[column].label}}</span> <span class="fa fa-sort" data-ng-show="ctrl.columns[column].sortDir === null"></span> <span class="fa fa-sort-asc" data-ng-show="ctrl.columns[column].sortDir === \'asc\'"></span> <span class="fa fa-sort-desc" data-ng-show="ctrl.columns[column].sortDir === \'desc\'"></span></th></tr></thead><tbody><tr data-ng-repeat="user in ctrl.users"><td data-ng-repeat="column in ctrl.columnNames"><span data-ng-if="column === \'remote_user\'"><a data-ui-sref="sites({user: user[column], start: ctrl.startDate, end: ctrl.endDate, tag: ctrl.tag})" tooltip-placement=top uib-tooltip="View user detail" tooltip-trigger><span class="fa fa-info-circle"></span> </a></span><span>{{ctrl.columns[column].format(user[column])}}</span></td></tr></tbody></table><div style="text-align: center"><ul uib-pagination total-items=ctrl.totalItems ng-model=ctrl.index max-size=10 items-per-page=ctrl.size class=pagination-sm rotate=false num-pages=numPages ng-change=ctrl.newIndex()></ul></div></div><div class=col-md-5><div class="panel panel-default"><div class=panel-heading><span><b>{{ctrl.chartBytesTitle}}</b></span></div><div class=panel-body><canvas id=chartBytes class="chart chart-pie" chart-data=ctrl.dataBytes chart-labels=ctrl.labelsBytes chart-legend=true chart-options=ctrl.bytesChartOptions></canvas></div></div><div class="panel panel-default"><div class=panel-heading><span><b>{{ctrl.chartTimeTitle}}</b></span></div><div class=panel-body><canvas id=chartTime class="chart chart-pie" chart-data=ctrl.dataTime chart-labels=ctrl.labelsTime chart-legend=true chart-options=ctrl.timeChartOptions></canvas></div></div></div></div></section>'),a.put("components/datePickers/datePickers.html",'<form class="navbar-form navbar-left"><div class="form-group has-feedback" data-ng-click="$ctrl.tooglePicker(\'startOpen\')"><input class=form-control data-uib-datepicker-popup=yyyy-MM-dd data-show-button-bar=false data-ng-model=$ctrl.startDate data-is-open=$ctrl.startOpen data-max-date=$ctrl.endDate data-ng-change=$ctrl.applyDate()> <span class="glyphicon glyphicon-calendar form-control-feedback" aria-hidden=true></span></div><div class="form-group has-feedback" data-ng-click="$ctrl.tooglePicker(\'endOpen\')"><input class=form-control data-uib-datepicker-popup=yyyy-MM-dd data-show-button-bar=false data-ng-model=$ctrl.endDate data-is-open=$ctrl.endOpen data-max-date=$ctrl.maxDate data-min-date=$ctrl.startDate data-ng-change=$ctrl.applyDate()> <span class="glyphicon glyphicon-calendar form-control-feedback" aria-hidden=true></span></div><div class="form-group has-feedback"><select class="form-control has-feedback" data-ng-model=$ctrl.tag data-ng-options="tag as tag.name for tag in $ctrl.tags track by tag.id" data-ng-change=$ctrl.applyTag() tooltip-placement=top uib-tooltip={{$ctrl.tag.info}} tooltip-trigger></select></div></form>'),a.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),a.put("components/navbar/navbar.html",'<nav class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container-fluid><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a data-ui-sref=main class=navbar-brand>ASR</a></div><div collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li data-ui-sref-active=active ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a data-ui-sref="{{item.link}}({start: startDate, end: endDate, tag: tag})">{{item.title}}</a></li><li ng-show=isAdmin() data-ui-sref-active=active ng-repeat="item in adminMenu" ng-class="{active:$state.includes(\'{{item.parent}}\')}"><a data-ui-sref={{item.target}}>{{item.title}}</a></li></ul><ul class="nav navbar-nav navbar-right">\x3c!-- <li ng-hide="isLoggedIn()" data-ui-sref-active="active"><a data-ui-sref="signup">Sign up</a></li> --\x3e<li ng-hide=isLoggedIn() data-ui-sref-active=active><a data-ui-sref=login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }}</p></li><li ng-show=isLoggedIn() data-ui-sref-active=active><a data-ui-sref=settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=isLoggedIn()><a data-ui-sref=main ng-click=logout()>Logout</a></li></ul></div></div></nav>')}]);